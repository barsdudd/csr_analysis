//
// File generated by rootcint at Sat Apr 20 10:50:32 2019

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME objdIroot_dict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "root_dict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void Dimuon_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Dimuon(void *p = 0);
   static void *newArray_Dimuon(Long_t size, void *p);
   static void delete_Dimuon(void *p);
   static void deleteArray_Dimuon(void *p);
   static void destruct_Dimuon(void *p);
   static void streamer_Dimuon(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Dimuon*)
   {
      ::Dimuon *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Dimuon >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Dimuon", ::Dimuon::Class_Version(), "./Event.h", 7,
                  typeid(::Dimuon), ::ROOT::DefineBehavior(ptr, ptr),
                  &::Dimuon::Dictionary, isa_proxy, 0,
                  sizeof(::Dimuon) );
      instance.SetNew(&new_Dimuon);
      instance.SetNewArray(&newArray_Dimuon);
      instance.SetDelete(&delete_Dimuon);
      instance.SetDeleteArray(&deleteArray_Dimuon);
      instance.SetDestructor(&destruct_Dimuon);
      instance.SetStreamerFunc(&streamer_Dimuon);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Dimuon*)
   {
      return GenerateInitInstanceLocal((::Dimuon*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Dimuon*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void Track_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Track(void *p = 0);
   static void *newArray_Track(Long_t size, void *p);
   static void delete_Track(void *p);
   static void deleteArray_Track(void *p);
   static void destruct_Track(void *p);
   static void streamer_Track(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Track*)
   {
      ::Track *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Track >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Track", ::Track::Class_Version(), "./Event.h", 44,
                  typeid(::Track), ::ROOT::DefineBehavior(ptr, ptr),
                  &::Track::Dictionary, isa_proxy, 0,
                  sizeof(::Track) );
      instance.SetNew(&new_Track);
      instance.SetNewArray(&newArray_Track);
      instance.SetDelete(&delete_Track);
      instance.SetDeleteArray(&deleteArray_Track);
      instance.SetDestructor(&destruct_Track);
      instance.SetStreamerFunc(&streamer_Track);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Track*)
   {
      return GenerateInitInstanceLocal((::Track*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Track*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void Event_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Event(void *p = 0);
   static void *newArray_Event(Long_t size, void *p);
   static void delete_Event(void *p);
   static void deleteArray_Event(void *p);
   static void destruct_Event(void *p);
   static void streamer_Event(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Event*)
   {
      ::Event *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Event >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Event", ::Event::Class_Version(), "./Event.h", 84,
                  typeid(::Event), ::ROOT::DefineBehavior(ptr, ptr),
                  &::Event::Dictionary, isa_proxy, 0,
                  sizeof(::Event) );
      instance.SetNew(&new_Event);
      instance.SetNewArray(&newArray_Event);
      instance.SetDelete(&delete_Event);
      instance.SetDeleteArray(&deleteArray_Event);
      instance.SetDestructor(&destruct_Event);
      instance.SetStreamerFunc(&streamer_Event);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Event*)
   {
      return GenerateInitInstanceLocal((::Event*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Event*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr Dimuon::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Dimuon::Class_Name()
{
   return "Dimuon";
}

//______________________________________________________________________________
const char *Dimuon::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Dimuon*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Dimuon::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Dimuon*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Dimuon::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Dimuon*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Dimuon::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Dimuon*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr Track::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Track::Class_Name()
{
   return "Track";
}

//______________________________________________________________________________
const char *Track::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Track*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Track::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Track*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Track::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Track*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Track::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Track*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr Event::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Event::Class_Name()
{
   return "Event";
}

//______________________________________________________________________________
const char *Event::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Event*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Event::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Event*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Event::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Event*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Event::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Event*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void Track::Streamer(TBuffer &R__b)
{
   // Stream an object of class Track.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b >> trackID;
      R__b >> roadID;
      R__b >> charge;
      R__b >> numHits;
      R__b.ReadStaticArray((int*)numHitsInSt);
      R__b >> chisq;
      R__b >> chisq_target;
      R__b >> chisq_dump;
      R__b >> chisq_upstream;
      posVtx.Streamer(R__b);
      momVtx.Streamer(R__b);
      int R__i;
      for (R__i = 0; R__i < 3; R__i++)
         posSt[R__i].Streamer(R__b);
      for (R__i = 0; R__i < 3; R__i++)
         momSt[R__i].Streamer(R__b);
      posTarg.Streamer(R__b);
      momTarg.Streamer(R__b);
      posDump.Streamer(R__b);
      momDump.Streamer(R__b);
      R__b >> z0x;
      R__b >> z0y;
      R__b >> tx_PT;
      R__b >> ty_PT;
      R__b >> isValid_2111_v32;
      R__b.CheckByteCount(R__s, R__c, Track::IsA());
   } else {
      R__c = R__b.WriteVersion(Track::IsA(), kTRUE);
      R__b << trackID;
      R__b << roadID;
      R__b << charge;
      R__b << numHits;
      R__b.WriteArray(numHitsInSt, 5);
      R__b << chisq;
      R__b << chisq_target;
      R__b << chisq_dump;
      R__b << chisq_upstream;
      posVtx.Streamer(R__b);
      momVtx.Streamer(R__b);
      int R__i;
      for (R__i = 0; R__i < 3; R__i++)
         posSt[R__i].Streamer(R__b);
      for (R__i = 0; R__i < 3; R__i++)
         momSt[R__i].Streamer(R__b);
      posTarg.Streamer(R__b);
      momTarg.Streamer(R__b);
      posDump.Streamer(R__b);
      momDump.Streamer(R__b);
      R__b << z0x;
      R__b << z0y;
      R__b << tx_PT;
      R__b << ty_PT;
      R__b << isValid_2111_v32;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void Track::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Track.
      TClass *R__cl = ::Track::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trackID", &trackID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "roadID", &roadID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "charge", &charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numHits", &numHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numHitsInSt[5]", numHitsInSt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chisq", &chisq);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chisq_target", &chisq_target);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chisq_dump", &chisq_dump);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chisq_upstream", &chisq_upstream);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "posVtx", &posVtx);
      R__insp.InspectMember(posVtx, "posVtx.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "momVtx", &momVtx);
      R__insp.InspectMember(momVtx, "momVtx.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "posSt[3]", posSt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "momSt[3]", momSt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "posTarg", &posTarg);
      R__insp.InspectMember(posTarg, "posTarg.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "momTarg", &momTarg);
      R__insp.InspectMember(momTarg, "momTarg.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "posDump", &posDump);
      R__insp.InspectMember(posDump, "posDump.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "momDump", &momDump);
      R__insp.InspectMember(momDump, "momDump.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z0x", &z0x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z0y", &z0y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tx_PT", &tx_PT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ty_PT", &ty_PT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isValid_2111_v32", &isValid_2111_v32);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Track(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Track : new ::Track;
   }
   static void *newArray_Track(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Track[nElements] : new ::Track[nElements];
   }
   // Wrapper around operator delete
   static void delete_Track(void *p) {
      delete ((::Track*)p);
   }
   static void deleteArray_Track(void *p) {
      delete [] ((::Track*)p);
   }
   static void destruct_Track(void *p) {
      typedef ::Track current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_Track(TBuffer &buf, void *obj) {
      ((::Track*)obj)->::Track::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::Track

//______________________________________________________________________________
void Dimuon::Streamer(TBuffer &R__b)
{
   // Stream an object of class Dimuon.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b >> dimuonID;
      R__b >> mass;
      R__b >> x1;
      R__b >> x2;
      R__b >> xF;
      R__b >> costh;
      R__b >> phi;
      R__b >> chisq_dimuon;
      R__b >> trackSeparation;
      vtx_pos.Streamer(R__b);
      vtx_mom.Streamer(R__b);
      st1_pos.Streamer(R__b);
      st1_mom.Streamer(R__b);
      st3_pos.Streamer(R__b);
      st3_mom.Streamer(R__b);
      R__b >> trackID_pos;
      R__b >> trackID_neg;
      R__b >> trackIndex_pos;
      R__b >> trackIndex_neg;
      R__b >> isValid_2111_v32;
      R__b >> CAisValid_2111_v32;
      R__b.CheckByteCount(R__s, R__c, Dimuon::IsA());
   } else {
      R__c = R__b.WriteVersion(Dimuon::IsA(), kTRUE);
      R__b << dimuonID;
      R__b << mass;
      R__b << x1;
      R__b << x2;
      R__b << xF;
      R__b << costh;
      R__b << phi;
      R__b << chisq_dimuon;
      R__b << trackSeparation;
      vtx_pos.Streamer(R__b);
      vtx_mom.Streamer(R__b);
      st1_pos.Streamer(R__b);
      st1_mom.Streamer(R__b);
      st3_pos.Streamer(R__b);
      st3_mom.Streamer(R__b);
      R__b << trackID_pos;
      R__b << trackID_neg;
      R__b << trackIndex_pos;
      R__b << trackIndex_neg;
      R__b << isValid_2111_v32;
      R__b << CAisValid_2111_v32;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void Dimuon::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Dimuon.
      TClass *R__cl = ::Dimuon::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dimuonID", &dimuonID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mass", &mass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x1", &x1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x2", &x2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xF", &xF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "costh", &costh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi", &phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chisq_dimuon", &chisq_dimuon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trackSeparation", &trackSeparation);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vtx_pos", &vtx_pos);
      R__insp.InspectMember(vtx_pos, "vtx_pos.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vtx_mom", &vtx_mom);
      R__insp.InspectMember(vtx_mom, "vtx_mom.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "st1_pos", &st1_pos);
      R__insp.InspectMember(st1_pos, "st1_pos.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "st1_mom", &st1_mom);
      R__insp.InspectMember(st1_mom, "st1_mom.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "st3_pos", &st3_pos);
      R__insp.InspectMember(st3_pos, "st3_pos.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "st3_mom", &st3_mom);
      R__insp.InspectMember(st3_mom, "st3_mom.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trackID_pos", &trackID_pos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trackID_neg", &trackID_neg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trackIndex_pos", &trackIndex_pos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trackIndex_neg", &trackIndex_neg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isValid_2111_v32", &isValid_2111_v32);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CAisValid_2111_v32", &CAisValid_2111_v32);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Dimuon(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Dimuon : new ::Dimuon;
   }
   static void *newArray_Dimuon(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Dimuon[nElements] : new ::Dimuon[nElements];
   }
   // Wrapper around operator delete
   static void delete_Dimuon(void *p) {
      delete ((::Dimuon*)p);
   }
   static void deleteArray_Dimuon(void *p) {
      delete [] ((::Dimuon*)p);
   }
   static void destruct_Dimuon(void *p) {
      typedef ::Dimuon current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_Dimuon(TBuffer &buf, void *obj) {
      ((::Dimuon*)obj)->::Dimuon::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::Dimuon

//______________________________________________________________________________
void Event::Streamer(TBuffer &R__b)
{
   // Stream an object of class Event.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b >> roadset;
      R__b >> spillID;
      R__b >> runID;
      R__b >> eventID;
      R__b >> targetPos;
      R__b.ReadStaticArray((int*)occChams);
      R__b.ReadStaticArray((int*)occChamsLR);
      R__b.ReadStaticArray((int*)occHodos);
      R__b.ReadStaticArray((int*)occProps);
      R__b.ReadStaticArray((int*)RF);
      R__b >> inh_thres;
      R__b.ReadStaticArray((double*)inte_t);
      R__b >> inte_p;
      R__b >> QIEsum;
      R__b >> G2SEM;
      R__b >> PotPerQie;
      {
         vector<Dimuon> &R__stl =  dimuons;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            Dimuon R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<Track> &R__stl =  tracks;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            Track R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      R__b.CheckByteCount(R__s, R__c, Event::IsA());
   } else {
      R__c = R__b.WriteVersion(Event::IsA(), kTRUE);
      R__b << roadset;
      R__b << spillID;
      R__b << runID;
      R__b << eventID;
      R__b << targetPos;
      R__b.WriteArray(occChams, 3);
      R__b.WriteArray((int*)occChamsLR, 6);
      R__b.WriteArray(occHodos, 4);
      R__b.WriteArray(occProps, 2);
      R__b.WriteArray(RF, 33);
      R__b << inh_thres;
      R__b.WriteArray(inte_t, 33);
      R__b << inte_p;
      R__b << QIEsum;
      R__b << G2SEM;
      R__b << PotPerQie;
      {
         vector<Dimuon> &R__stl =  dimuons;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<Dimuon>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((Dimuon&)(*R__k)).Streamer(R__b);
            }
         }
      }
      {
         vector<Track> &R__stl =  tracks;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<Track>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((Track&)(*R__k)).Streamer(R__b);
            }
         }
      }
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void Event::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Event.
      TClass *R__cl = ::Event::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "roadset", &roadset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "spillID", &spillID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "runID", &runID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eventID", &eventID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "targetPos", &targetPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "occChams[3]", occChams);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "occChamsLR[3][2]", occChamsLR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "occHodos[4]", occHodos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "occProps[2]", occProps);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RF[33]", RF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "inh_thres", &inh_thres);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "inte_t[33]", inte_t);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "inte_p", &inte_p);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "QIEsum", &QIEsum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "G2SEM", &G2SEM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PotPerQie", &PotPerQie);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dimuons", (void*)&dimuons);
      R__insp.InspectMember("vector<Dimuon>", (void*)&dimuons, "dimuons.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tracks", (void*)&tracks);
      R__insp.InspectMember("vector<Track>", (void*)&tracks, "tracks.", false);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Event(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Event : new ::Event;
   }
   static void *newArray_Event(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Event[nElements] : new ::Event[nElements];
   }
   // Wrapper around operator delete
   static void delete_Event(void *p) {
      delete ((::Event*)p);
   }
   static void deleteArray_Event(void *p) {
      delete [] ((::Event*)p);
   }
   static void destruct_Event(void *p) {
      typedef ::Event current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_Event(TBuffer &buf, void *obj) {
      ((::Event*)obj)->::Event::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::Event

namespace ROOTDict {
   void vectorlEDimuongR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEDimuongR_Dictionary();
   static void *new_vectorlEDimuongR(void *p = 0);
   static void *newArray_vectorlEDimuongR(Long_t size, void *p);
   static void delete_vectorlEDimuongR(void *p);
   static void deleteArray_vectorlEDimuongR(void *p);
   static void destruct_vectorlEDimuongR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<Dimuon>*)
   {
      vector<Dimuon> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<Dimuon>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<Dimuon>", -2, "prec_stl/vector", 49,
                  typeid(vector<Dimuon>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEDimuongR_Dictionary, isa_proxy, 0,
                  sizeof(vector<Dimuon>) );
      instance.SetNew(&new_vectorlEDimuongR);
      instance.SetNewArray(&newArray_vectorlEDimuongR);
      instance.SetDelete(&delete_vectorlEDimuongR);
      instance.SetDeleteArray(&deleteArray_vectorlEDimuongR);
      instance.SetDestructor(&destruct_vectorlEDimuongR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<Dimuon> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<Dimuon>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEDimuongR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<Dimuon>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEDimuongR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Dimuon> : new vector<Dimuon>;
   }
   static void *newArray_vectorlEDimuongR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Dimuon>[nElements] : new vector<Dimuon>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEDimuongR(void *p) {
      delete ((vector<Dimuon>*)p);
   }
   static void deleteArray_vectorlEDimuongR(void *p) {
      delete [] ((vector<Dimuon>*)p);
   }
   static void destruct_vectorlEDimuongR(void *p) {
      typedef vector<Dimuon> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<Dimuon>

namespace ROOTDict {
   void vectorlETrackgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETrackgR_Dictionary();
   static void *new_vectorlETrackgR(void *p = 0);
   static void *newArray_vectorlETrackgR(Long_t size, void *p);
   static void delete_vectorlETrackgR(void *p);
   static void deleteArray_vectorlETrackgR(void *p);
   static void destruct_vectorlETrackgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<Track>*)
   {
      vector<Track> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<Track>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<Track>", -2, "prec_stl/vector", 49,
                  typeid(vector<Track>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlETrackgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<Track>) );
      instance.SetNew(&new_vectorlETrackgR);
      instance.SetNewArray(&newArray_vectorlETrackgR);
      instance.SetDelete(&delete_vectorlETrackgR);
      instance.SetDeleteArray(&deleteArray_vectorlETrackgR);
      instance.SetDestructor(&destruct_vectorlETrackgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<Track> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<Track>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETrackgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<Track>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlETrackgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Track> : new vector<Track>;
   }
   static void *newArray_vectorlETrackgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Track>[nElements] : new vector<Track>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETrackgR(void *p) {
      delete ((vector<Track>*)p);
   }
   static void deleteArray_vectorlETrackgR(void *p) {
      delete [] ((vector<Track>*)p);
   }
   static void destruct_vectorlETrackgR(void *p) {
      typedef vector<Track> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<Track>

/********************************************************
* obj/root_dict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableroot_dict();

extern "C" void G__set_cpp_environmentroot_dict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("Event.h");
  G__cpp_reset_tagtableroot_dict();
}
#include <new>
extern "C" int G__cpp_dllrevroot_dict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* Dimuon */
static int G__root_dict_220_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Dimuon*) G__getstructoffset())->operator<(*(Dimuon*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__root_dict_220_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Dimuon*) G__getstructoffset())->operator==(*(Dimuon*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__root_dict_220_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Dimuon* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Dimuon[n];
     } else {
       p = new((void*) gvp) Dimuon[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Dimuon;
     } else {
       p = new((void*) gvp) Dimuon;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__root_dictLN_Dimuon));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__root_dict_220_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Dimuon::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__root_dict_220_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Dimuon::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__root_dict_220_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Dimuon::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__root_dict_220_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Dimuon::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__root_dict_220_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const Dimuon*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__root_dict_220_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Dimuon*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__root_dict_220_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Dimuon*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__root_dict_220_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Dimuon*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__root_dict_220_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Dimuon::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__root_dict_220_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Dimuon::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__root_dict_220_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Dimuon::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__root_dict_220_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Dimuon::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__root_dict_220_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Dimuon* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Dimuon(*(Dimuon*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__root_dictLN_Dimuon));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Dimuon G__TDimuon;
static int G__root_dict_220_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Dimuon*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Dimuon*) (soff+(sizeof(Dimuon)*i)))->~G__TDimuon();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Dimuon*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Dimuon*) (soff))->~G__TDimuon();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__root_dict_220_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Dimuon* dest = (Dimuon*) G__getstructoffset();
   *dest = *(Dimuon*) libp->para[0].ref;
   const Dimuon& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Track */
static int G__root_dict_221_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Track*) G__getstructoffset())->operator<(*(Track*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__root_dict_221_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Track*) G__getstructoffset())->operator==(*(Track*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__root_dict_221_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Track* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Track[n];
     } else {
       p = new((void*) gvp) Track[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Track;
     } else {
       p = new((void*) gvp) Track;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__root_dictLN_Track));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__root_dict_221_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Track::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__root_dict_221_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Track::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__root_dict_221_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Track::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__root_dict_221_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Track::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__root_dict_221_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const Track*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__root_dict_221_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Track*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__root_dict_221_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Track*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__root_dict_221_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Track*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__root_dict_221_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Track::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__root_dict_221_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Track::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__root_dict_221_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Track::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__root_dict_221_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Track::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__root_dict_221_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Track* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Track(*(Track*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__root_dictLN_Track));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Track G__TTrack;
static int G__root_dict_221_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Track*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Track*) (soff+(sizeof(Track)*i)))->~G__TTrack();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Track*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Track*) (soff))->~G__TTrack();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__root_dict_221_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Track* dest = (Track*) G__getstructoffset();
   *dest = *(Track*) libp->para[0].ref;
   const Track& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Event */
static int G__root_dict_222_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Event*) G__getstructoffset())->occTotal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__root_dict_222_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Event*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__root_dict_222_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Event* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Event[n];
     } else {
       p = new((void*) gvp) Event[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Event;
     } else {
       p = new((void*) gvp) Event;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__root_dictLN_Event));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__root_dict_222_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Event::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__root_dict_222_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Event::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__root_dict_222_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Event::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__root_dict_222_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Event::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__root_dict_222_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const Event*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__root_dict_222_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Event*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__root_dict_222_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Event*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__root_dict_222_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Event*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__root_dict_222_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Event::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__root_dict_222_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Event::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__root_dict_222_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Event::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__root_dict_222_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Event::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__root_dict_222_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Event* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Event(*(Event*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__root_dictLN_Event));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Event G__TEvent;
static int G__root_dict_222_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Event*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Event*) (soff+(sizeof(Event)*i)))->~G__TEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Event*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Event*) (soff))->~G__TEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__root_dict_222_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Event* dest = (Event*) G__getstructoffset();
   *dest = *(Event*) libp->para[0].ref;
   const Event& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* Dimuon */

/* Track */

/* Event */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncroot_dict {
 public:
  G__Sizep2memfuncroot_dict(): p(&G__Sizep2memfuncroot_dict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncroot_dict::*p)();
};

size_t G__get_sizep2memfuncroot_dict()
{
  G__Sizep2memfuncroot_dict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceroot_dict() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableroot_dict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__root_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__root_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__root_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__root_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__root_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__root_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__root_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__root_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__root_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__root_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__root_dictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__root_dictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__root_dictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__root_dictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__root_dictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__root_dictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__root_dictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__root_dictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__root_dictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__root_dictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__root_dictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__root_dictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__root_dictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__root_dictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__root_dictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__root_dictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__root_dictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__root_dictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__root_dictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__root_dictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__root_dictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Dimuon>",117,G__get_linked_tagnum(&G__root_dictLN_vectorlEDimuoncOallocatorlEDimuongRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__root_dictLN_reverse_iteratorlEvectorlEDimuoncOallocatorlEDimuongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__root_dictLN_vectorlEDimuoncOallocatorlEDimuongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__root_dictLN_reverse_iteratorlEvectorlEDimuoncOallocatorlEDimuongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__root_dictLN_vectorlEDimuoncOallocatorlEDimuongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Track>",117,G__get_linked_tagnum(&G__root_dictLN_vectorlETrackcOallocatorlETrackgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__root_dictLN_reverse_iteratorlEvectorlETrackcOallocatorlETrackgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__root_dictLN_vectorlETrackcOallocatorlETrackgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__root_dictLN_reverse_iteratorlEvectorlETrackcOallocatorlETrackgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__root_dictLN_vectorlETrackcOallocatorlETrackgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* Dimuon */
static void G__setup_memvarDimuon(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__root_dictLN_Dimuon));
   { Dimuon *p; p=(Dimuon*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->dimuonID)-(long)(p)),105,0,0,-1,-1,-1,1,"dimuonID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mass)-(long)(p)),100,0,0,-1,-1,-1,1,"mass=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->x1)-(long)(p)),100,0,0,-1,-1,-1,1,"x1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->x2)-(long)(p)),100,0,0,-1,-1,-1,1,"x2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->xF)-(long)(p)),100,0,0,-1,-1,-1,1,"xF=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->costh)-(long)(p)),100,0,0,-1,-1,-1,1,"costh=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->phi)-(long)(p)),100,0,0,-1,-1,-1,1,"phi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->chisq_dimuon)-(long)(p)),100,0,0,-1,-1,-1,1,"chisq_dimuon=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trackSeparation)-(long)(p)),100,0,0,-1,-1,-1,1,"trackSeparation=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vtx_pos)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__root_dictLN_TVector3),-1,-1,1,"vtx_pos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vtx_mom)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__root_dictLN_TVector3),-1,-1,1,"vtx_mom=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->st1_pos)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__root_dictLN_TVector3),-1,-1,1,"st1_pos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->st1_mom)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__root_dictLN_TVector3),-1,-1,1,"st1_mom=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->st3_pos)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__root_dictLN_TVector3),-1,-1,1,"st3_pos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->st3_mom)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__root_dictLN_TVector3),-1,-1,1,"st3_mom=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trackID_pos)-(long)(p)),105,0,0,-1,-1,-1,1,"trackID_pos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trackID_neg)-(long)(p)),105,0,0,-1,-1,-1,1,"trackID_neg=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trackIndex_pos)-(long)(p)),105,0,0,-1,-1,-1,1,"trackIndex_pos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trackIndex_neg)-(long)(p)),105,0,0,-1,-1,-1,1,"trackIndex_neg=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isValid_2111_v32)-(long)(p)),103,0,0,-1,-1,-1,1,"isValid_2111_v32=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->CAisValid_2111_v32)-(long)(p)),103,0,0,-1,-1,-1,1,"CAisValid_2111_v32=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__root_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Track */
static void G__setup_memvarTrack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__root_dictLN_Track));
   { Track *p; p=(Track*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->trackID)-(long)(p)),105,0,0,-1,-1,-1,1,"trackID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->roadID)-(long)(p)),105,0,0,-1,-1,-1,1,"roadID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->charge)-(long)(p)),105,0,0,-1,-1,-1,1,"charge=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->numHits)-(long)(p)),105,0,0,-1,-1,-1,1,"numHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->numHitsInSt)-(long)(p)),105,0,0,-1,-1,-1,1,"numHitsInSt[5]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->chisq)-(long)(p)),100,0,0,-1,-1,-1,1,"chisq=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->chisq_target)-(long)(p)),100,0,0,-1,-1,-1,1,"chisq_target=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->chisq_dump)-(long)(p)),100,0,0,-1,-1,-1,1,"chisq_dump=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->chisq_upstream)-(long)(p)),100,0,0,-1,-1,-1,1,"chisq_upstream=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->posVtx)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__root_dictLN_TVector3),-1,-1,1,"posVtx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->momVtx)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__root_dictLN_TVector3),-1,-1,1,"momVtx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->posSt)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__root_dictLN_TVector3),-1,-1,1,"posSt[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->momSt)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__root_dictLN_TVector3),-1,-1,1,"momSt[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->posTarg)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__root_dictLN_TVector3),-1,-1,1,"posTarg=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->momTarg)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__root_dictLN_TVector3),-1,-1,1,"momTarg=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->posDump)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__root_dictLN_TVector3),-1,-1,1,"posDump=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->momDump)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__root_dictLN_TVector3),-1,-1,1,"momDump=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->z0x)-(long)(p)),100,0,0,-1,-1,-1,1,"z0x=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->z0y)-(long)(p)),100,0,0,-1,-1,-1,1,"z0y=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tx_PT)-(long)(p)),100,0,0,-1,-1,-1,1,"tx_PT=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ty_PT)-(long)(p)),100,0,0,-1,-1,-1,1,"ty_PT=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isValid_2111_v32)-(long)(p)),103,0,0,-1,-1,-1,1,"isValid_2111_v32=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__root_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Event */
static void G__setup_memvarEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__root_dictLN_Event));
   { Event *p; p=(Event*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->roadset)-(long)(p)),105,0,0,-1,-1,-1,1,"roadset=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->spillID)-(long)(p)),105,0,0,-1,-1,-1,1,"spillID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->runID)-(long)(p)),105,0,0,-1,-1,-1,1,"runID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eventID)-(long)(p)),105,0,0,-1,-1,-1,1,"eventID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->targetPos)-(long)(p)),105,0,0,-1,-1,-1,1,"targetPos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->occChams)-(long)(p)),105,0,0,-1,-1,-1,1,"occChams[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->occChamsLR)-(long)(p)),105,0,0,-1,-1,-1,1,"occChamsLR[3][2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->occHodos)-(long)(p)),105,0,0,-1,-1,-1,1,"occHodos[4]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->occProps)-(long)(p)),105,0,0,-1,-1,-1,1,"occProps[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->RF)-(long)(p)),105,0,0,-1,-1,-1,1,"RF[33]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->inh_thres)-(long)(p)),105,0,0,-1,-1,-1,1,"inh_thres=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->inte_t)-(long)(p)),100,0,0,-1,-1,-1,1,"inte_t[33]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->inte_p)-(long)(p)),100,0,0,-1,-1,-1,1,"inte_p=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->QIEsum)-(long)(p)),100,0,0,-1,-1,-1,1,"QIEsum=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->G2SEM)-(long)(p)),100,0,0,-1,-1,-1,1,"G2SEM=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PotPerQie)-(long)(p)),100,0,0,-1,-1,-1,1,"PotPerQie=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dimuons)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__root_dictLN_vectorlEDimuoncOallocatorlEDimuongRsPgR),G__defined_typename("vector<Dimuon>"),-1,1,"dimuons=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tracks)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__root_dictLN_vectorlETrackcOallocatorlETrackgRsPgR),G__defined_typename("vector<Track>"),-1,1,"tracks=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__root_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarroot_dict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncDimuon(void) {
   /* Dimuon */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__root_dictLN_Dimuon));
   G__memfunc_setup("operator<",936,G__root_dict_220_0_1, 103, -1, -1, 0, 1, 1, 1, 8, "u 'Dimuon' - 11 - dimuon", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__root_dict_220_0_2, 103, -1, -1, 0, 1, 1, 1, 8, "u 'Dimuon' - 11 - dimuon", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Dimuon",620,G__root_dict_220_0_3, 105, G__get_linked_tagnum(&G__root_dictLN_Dimuon), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__root_dict_220_0_4, 85, G__get_linked_tagnum(&G__root_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Dimuon::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__root_dict_220_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Dimuon::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__root_dict_220_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Dimuon::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__root_dict_220_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Dimuon::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__root_dict_220_0_8, 85, G__get_linked_tagnum(&G__root_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__root_dict_220_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__root_dict_220_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__root_dict_220_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__root_dict_220_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Dimuon::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__root_dict_220_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Dimuon::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__root_dict_220_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Dimuon::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__root_dict_220_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Dimuon::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Dimuon", 620, G__root_dict_220_0_16, (int) ('i'), G__get_linked_tagnum(&G__root_dictLN_Dimuon), -1, 0, 1, 1, 1, 0, "u 'Dimuon' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Dimuon", 746, G__root_dict_220_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__root_dict_220_0_18, (int) ('u'), G__get_linked_tagnum(&G__root_dictLN_Dimuon), -1, 1, 1, 1, 1, 0, "u 'Dimuon' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTrack(void) {
   /* Track */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__root_dictLN_Track));
   G__memfunc_setup("operator<",936,G__root_dict_221_0_1, 103, -1, -1, 0, 1, 1, 1, 8, "u 'Track' - 11 - track", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__root_dict_221_0_2, 103, -1, -1, 0, 1, 1, 1, 8, "u 'Track' - 11 - track", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Track",501,G__root_dict_221_0_3, 105, G__get_linked_tagnum(&G__root_dictLN_Track), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__root_dict_221_0_4, 85, G__get_linked_tagnum(&G__root_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Track::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__root_dict_221_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Track::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__root_dict_221_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Track::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__root_dict_221_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Track::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__root_dict_221_0_8, 85, G__get_linked_tagnum(&G__root_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__root_dict_221_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__root_dict_221_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__root_dict_221_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__root_dict_221_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Track::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__root_dict_221_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Track::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__root_dict_221_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Track::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__root_dict_221_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Track::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Track", 501, G__root_dict_221_0_16, (int) ('i'), G__get_linked_tagnum(&G__root_dictLN_Track), -1, 0, 1, 1, 1, 0, "u 'Track' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Track", 627, G__root_dict_221_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__root_dict_221_0_18, (int) ('u'), G__get_linked_tagnum(&G__root_dictLN_Track), -1, 1, 1, 1, 1, 0, "u 'Track' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEvent(void) {
   /* Event */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__root_dictLN_Event));
   G__memfunc_setup("occTotal",825,G__root_dict_222_0_1, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__root_dict_222_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Event",514,G__root_dict_222_0_3, 105, G__get_linked_tagnum(&G__root_dictLN_Event), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__root_dict_222_0_4, 85, G__get_linked_tagnum(&G__root_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Event::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__root_dict_222_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Event::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__root_dict_222_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Event::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__root_dict_222_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Event::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__root_dict_222_0_8, 85, G__get_linked_tagnum(&G__root_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__root_dict_222_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__root_dict_222_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__root_dict_222_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__root_dict_222_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Event::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__root_dict_222_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Event::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__root_dict_222_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Event::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__root_dict_222_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Event::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Event", 514, G__root_dict_222_0_16, (int) ('i'), G__get_linked_tagnum(&G__root_dictLN_Event), -1, 0, 1, 1, 1, 0, "u 'Event' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Event", 640, G__root_dict_222_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__root_dict_222_0_18, (int) ('u'), G__get_linked_tagnum(&G__root_dictLN_Event), -1, 1, 1, 1, 1, 0, "u 'Event' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncroot_dict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalroot_dict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcroot_dict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__root_dictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__root_dictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__root_dictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__root_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__root_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__root_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__root_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__root_dictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__root_dictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__root_dictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__root_dictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__root_dictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__root_dictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__root_dictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__root_dictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__root_dictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__root_dictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__root_dictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__root_dictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__root_dictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__root_dictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__root_dictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__root_dictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__root_dictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__root_dictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__root_dictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__root_dictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__root_dictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__root_dictLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__root_dictLN_Dimuon = { "Dimuon" , 99 , -1 };
G__linked_taginfo G__root_dictLN_Track = { "Track" , 99 , -1 };
G__linked_taginfo G__root_dictLN_Event = { "Event" , 99 , -1 };
G__linked_taginfo G__root_dictLN_vectorlEDimuoncOallocatorlEDimuongRsPgR = { "vector<Dimuon,allocator<Dimuon> >" , 99 , -1 };
G__linked_taginfo G__root_dictLN_reverse_iteratorlEvectorlEDimuoncOallocatorlEDimuongRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Dimuon,allocator<Dimuon> >::iterator>" , 99 , -1 };
G__linked_taginfo G__root_dictLN_vectorlETrackcOallocatorlETrackgRsPgR = { "vector<Track,allocator<Track> >" , 99 , -1 };
G__linked_taginfo G__root_dictLN_reverse_iteratorlEvectorlETrackcOallocatorlETrackgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Track,allocator<Track> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableroot_dict() {
  G__root_dictLN_TClass.tagnum = -1 ;
  G__root_dictLN_TBuffer.tagnum = -1 ;
  G__root_dictLN_TMemberInspector.tagnum = -1 ;
  G__root_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__root_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__root_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__root_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__root_dictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__root_dictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__root_dictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__root_dictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__root_dictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__root_dictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__root_dictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__root_dictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__root_dictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__root_dictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__root_dictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__root_dictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__root_dictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__root_dictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__root_dictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__root_dictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__root_dictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__root_dictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__root_dictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__root_dictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__root_dictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__root_dictLN_TVector3.tagnum = -1 ;
  G__root_dictLN_Dimuon.tagnum = -1 ;
  G__root_dictLN_Track.tagnum = -1 ;
  G__root_dictLN_Event.tagnum = -1 ;
  G__root_dictLN_vectorlEDimuoncOallocatorlEDimuongRsPgR.tagnum = -1 ;
  G__root_dictLN_reverse_iteratorlEvectorlEDimuoncOallocatorlEDimuongRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__root_dictLN_vectorlETrackcOallocatorlETrackgRsPgR.tagnum = -1 ;
  G__root_dictLN_reverse_iteratorlEvectorlETrackcOallocatorlETrackgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableroot_dict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__root_dictLN_TClass);
   G__get_linked_tagnum_fwd(&G__root_dictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__root_dictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__root_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__root_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__root_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__root_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__root_dictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__root_dictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__root_dictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__root_dictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__root_dictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__root_dictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__root_dictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__root_dictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__root_dictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__root_dictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__root_dictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__root_dictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__root_dictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__root_dictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__root_dictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__root_dictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__root_dictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__root_dictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__root_dictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__root_dictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__root_dictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__root_dictLN_TVector3);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__root_dictLN_Dimuon),sizeof(Dimuon),-1,1280,(char*)NULL,G__setup_memvarDimuon,G__setup_memfuncDimuon);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__root_dictLN_Track),sizeof(Track),-1,1280,(char*)NULL,G__setup_memvarTrack,G__setup_memfuncTrack);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__root_dictLN_Event),sizeof(Event),-1,1280,(char*)NULL,G__setup_memvarEvent,G__setup_memfuncEvent);
   G__get_linked_tagnum_fwd(&G__root_dictLN_vectorlEDimuoncOallocatorlEDimuongRsPgR);
   G__get_linked_tagnum_fwd(&G__root_dictLN_reverse_iteratorlEvectorlEDimuoncOallocatorlEDimuongRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__root_dictLN_vectorlETrackcOallocatorlETrackgRsPgR);
   G__get_linked_tagnum_fwd(&G__root_dictLN_reverse_iteratorlEvectorlETrackcOallocatorlETrackgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setuproot_dict(void) {
  G__check_setup_version(30051515,"G__cpp_setuproot_dict()");
  G__set_cpp_environmentroot_dict();
  G__cpp_setup_tagtableroot_dict();

  G__cpp_setup_inheritanceroot_dict();

  G__cpp_setup_typetableroot_dict();

  G__cpp_setup_memvarroot_dict();

  G__cpp_setup_memfuncroot_dict();
  G__cpp_setup_globalroot_dict();
  G__cpp_setup_funcroot_dict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncroot_dict();
  return;
}
class G__cpp_setup_initroot_dict {
  public:
    G__cpp_setup_initroot_dict() { G__add_setup_func("root_dict",(G__incsetup)(&G__cpp_setuproot_dict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initroot_dict() { G__remove_setup_func("root_dict"); }
};
G__cpp_setup_initroot_dict G__cpp_setup_initializerroot_dict;

